diff --git a/Makefile b/Makefile
index a4494ca..91eee66 100644
--- a/Makefile
+++ b/Makefile
@@ -3,10 +3,10 @@
 #                                                         :::      ::::::::    #
 #    Makefile                                           :+:      :+:    :+:    #
 #                                                     +:+ +:+         +:+      #
-#    By: vgodoy <vgodoy@student.42.fr>              +#+  +:+       +#+         #
+#    By: mkling <mkling@student.42.fr>              +#+  +:+       +#+         #
 #                                                 +#+#+#+#+#+   +#+            #
 #    Created: 2025/02/28 15:34:20 by mkling            #+#    #+#              #
-#    Updated: 2025/03/12 16:26:56 by vgodoy           ###   ########.fr        #
+#    Updated: 2025/03/20 15:40:44 by mkling           ###   ########.fr        #
 #                                                                              #
 # **************************************************************************** #
 
@@ -71,7 +71,8 @@ FUNC_TRANS	=	center.c \
 				vector.c \
 				project.c
 
-FUNC_RAY 	=	interse.c
+FUNC_RAY 	=	intersect.c \
+				texture.c
 
 FUNC		=	$(addprefix $(DIR_DISP)/, $(FUNC_DISP)) \
 				$(addprefix $(DIR_ERR)/, $(FUNC_ERR)) \
diff --git a/inc/cub.h b/inc/cub.h
index 8fd7d1b..b6c38da 100644
--- a/inc/cub.h
+++ b/inc/cub.h
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   cub.h                                              :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: vgodoy <vgodoy@student.42.fr>              +#+  +:+       +#+        */
+/*   By: mkling <mkling@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/02/28 16:54:35 by vgodoy            #+#    #+#             */
-/*   Updated: 2025/03/20 14:17:41 by vgodoy           ###   ########.fr       */
+/*   Updated: 2025/03/20 16:18:21 by mkling           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -126,7 +126,7 @@ typedef struct s_key_states
 	bool	d;
 }	t_key;
 
-typedef	struct s_player
+typedef struct s_player
 {
 	double	player_angle;
 	char	init_orientation;
@@ -137,6 +137,33 @@ typedef	struct s_player
 	int		cursor_size;
 }	t_play;
 
+typedef struct s_ray
+{
+	double	angle_deg;
+	double	angle_rad;
+	double	angle_90;
+	double	dist_x;
+	double	dist_y;
+	double	dda_x;
+	double	dda_y;
+	double	f_x;
+	double	f_y;
+	double	wall_dist;
+	double	dist_in_text;
+	int		y;
+	int		x;
+	int		firstx;
+	int		firsty;
+	int		step_x;
+	int		step_y;
+	int		x_player;
+	int		y_player;
+	int		side;
+	int		wall_height;
+	int		top_wall;
+	int		end_wall;
+}	t_ray;
+
 typedef struct s_cub
 {
 	int		w;		///permet d'utiliser la fonction
@@ -151,6 +178,7 @@ typedef struct s_cub
 	t_key	keys;
 	t_play	player;
 	t_disp	display;
+	t_ray	ray;
 	int		fd;
 	char	temp_map[MAX_TEMP_MAP];
 	int		offset_x;
@@ -227,6 +255,7 @@ t_pt	project_point(t_cub	*cub, t_pt pt);
 void	raycasting(t_cub *cub);
 double	get_line_len(double start_x, double start_y,
 			double end_x, double end_y);
+void	paint_wall(t_cub *cub, int column);
 
 
 enum e_errcode {
diff --git a/inc/libft/libft.a b/inc/libft/libft.a
index 34b9330..7bcf744 100644
Binary files a/inc/libft/libft.a and b/inc/libft/libft.a differ
diff --git a/src/game/loop.c b/src/game/loop.c
index d66b9aa..cf7abd9 100644
--- a/src/game/loop.c
+++ b/src/game/loop.c
@@ -3,17 +3,15 @@
 /*                                                        :::      ::::::::   */
 /*   loop.c                                             :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: vgodoy <vgodoy@student.42.fr>              +#+  +:+       +#+        */
+/*   By: mkling <mkling@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/03/09 00:20:40 by alex              #+#    #+#             */
-/*   Updated: 2025/03/18 14:03:08 by vgodoy           ###   ########.fr       */
+/*   Updated: 2025/03/20 15:39:35 by mkling           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
 #include "cub.h"
 
-/*	// 	printf("player grid pt is %f, %f - ", cub->player.grid_pt.x, cub->player.grid_pt.y);
-	// 	printf("map grid pt is %f, %f\n", cub->player.map_pt.x, cub->player.map_pt.y);*/
 static void	rotations(t_cub *cub)
 {
 	if (cub->keys.left)
diff --git a/src/raycasting/interse.c b/src/raycasting/interse.c
deleted file mode 100644
index 8f8d4be..0000000
--- a/src/raycasting/interse.c
+++ /dev/null
@@ -1,312 +0,0 @@
-#include "cub.h"
-
-void	init_first_dist(t_cub *cub, double *ray)
-{
-	double	x;
-	double	y;
-
-	x = cub->player.grid_pt.x;
-	y = cub->player.grid_pt.y;
-	if (ray[ANGLE_DEG] < 90)
-	{
-		ray[F_X] = (ceil(x) - x);
-		ray[F_Y] = (floor(y) - y);
-	}
-	else if (ray[ANGLE_DEG] < 180)
-	{
-		ray[F_X] = (ceil(x) - x);
-		ray[F_Y] = (ceil(y) - y);
-	}
-	else if (ray[ANGLE_DEG] < 270)
-	{
-		ray[F_X] = (floor(x) - x);
-		ray[F_Y] = (ceil(y) - y);
-	}
-	else
-	{
-		ray[F_X] = (floor(x) - x);
-		ray[F_Y] = (floor(y) - y);
-	}
-}
-
-/*1st ligne gives a value from -1 to 1
-2ng line give a value in degrees from -30 to 30 for a field of view of 60
-3rd ligne corrects angle accordig to actual angle of the player*/
-void	init_ray(t_cub *cub, int pixel_column, double *ray)
-{
-	double	angle;
-
-	angle = 2 * pixel_column / (double)WIN_WIDTH - 1;
-	angle = angle * FIELD_OF_VIEW / 2;
-	angle = angle + cub->player.player_angle;
-	if (angle < 0)
-		angle += 360;
-	else if (angle >= 360)
-		angle -= 360;
-	ray[ANGLE_DEG] = angle;
-	ray[ANGLE_RAD] = fabs(angle * (PI / 180.0));
-
-	if (sin(ray[ANGLE_RAD]) == 0.0)
-		ray[DIST_X] = 100;
-	else
-		ray[DIST_X] = fabs(1 / sin(ray[ANGLE_RAD]));
-	if (cos(ray[ANGLE_RAD]) == 0.0)
-		ray[DIST_Y] = 100;
-	else
-		ray[DIST_Y] = fabs(1 / cos(ray[ANGLE_RAD]));
-
-	init_first_dist(cub, ray);
-	// if (ray[FIRST_X] < 0)
-	// 	ray[DIST_X] *= -1;
-	// if (ray[FIRST_Y] < 0)
-	// 	ray[DIST_Y] *= -1;
-}
-
-
-void	init_step(t_cub *cub, double *ray, int *step)
-{
-	step[X_PLAYER] = floor(cub->player.grid_pt.x);
-	step[Y_PLAYER] = floor(cub->player.grid_pt.y);
-	step[X] = step[X_PLAYER];
-	step[Y] = step[Y_PLAYER];
-	step[STEP_X] = 1;
-	step[STEP_Y] = 1;
-	if (ray[F_X] < 0)
-		step[STEP_X] = -1;
-	if (ray[F_Y] < 0)
-		step[STEP_Y] = -1;
-	ray[FIRST_X] = ray[F_X] * ray[DIST_X];
-	ray[FIRST_Y] = ray[F_Y] * ray[DIST_Y];
-}
-
-/*
-In the if and else, we will put some condition
-to know from where the block is hit (N S W E)*/
-void	digital_differential_analyser(t_cub *cub, double *ray, int *step, int pixel_column)
-{
-	(void)pixel_column;
-	(void)cub;
-	ray[DDA_X] = fabs(ray[FIRST_X]);
-	ray[DDA_Y] = fabs(ray[FIRST_Y]);
-	if (pixel_column == WIN_WIDTH / 2 || pixel_column == WIN_WIDTH / 2 + 1)
-	{
-		printf("DIST_X=[%f] DIST_Y=[%f]\n", ray[DIST_X], ray[DIST_Y]);
-	}
-	while (cub->map->clean_map[step[Y]][step[X]] == '0')
-	{
-		if (pixel_column == WIN_WIDTH / 2 || pixel_column == WIN_WIDTH / 2 + 1)
-		{
-			printf("DDA_X=[%f] DDA_Y=[%f] X=[%d] Y=[%d]\n", ray[DDA_X], ray[DDA_Y], step[X], step[Y]);
-		}
-		if (fabs(ray[DDA_X]) < fabs(ray[DDA_Y]))
-		{
-			step[LAST_MOVE] = LEFT;
-			step[X] += step[STEP_X];
-			ray[DDA_X] += ray[DIST_X];
-		}
-		else
-		{
-			step[LAST_MOVE] = TOP;
-			step[Y] += step[STEP_Y];
-			ray[DDA_Y] += ray[DIST_Y];
-		}
-	}
-}
-
-
-void	define_surface_collision (double *ray, int *step)
-{
-	if (ray[ANGLE_DEG] < 90)
-	{
-		if (step[LAST_MOVE] == TOP)
-			step[LAST_MOVE] = NORTH;
-		else
-			step[LAST_MOVE] = EAST;
-	}
-	else if (ray[ANGLE_DEG] < 180)
-	{
-		if (step[LAST_MOVE] == TOP)
-			step[LAST_MOVE] = SOUTH;
-		else
-			step[LAST_MOVE] = EAST;
-	}
-	else if (ray[ANGLE_DEG] < 270)
-	{
-		if (step[LAST_MOVE] == TOP)
-			step[LAST_MOVE] = SOUTH;
-		else
-			step[LAST_MOVE] = WEST;
-	}
-	else
-	{
-		if (step[LAST_MOVE] == TOP)
-			step[LAST_MOVE] = NORTH;
-		else
-			step[LAST_MOVE] = WEST;
-	}
-}
-
-// void	calculate_angle_90(double *ray, int *step, int pixel_column)
-// {
-// 	if (step[LAST_MOVE] == NORTH)
-// 	{
-// 		if (ray[ANGLE_DEG] >= 270)
-// 			ray[ANGLE_90] = 360 - ray[ANGLE_DEG];
-// 		else
-// 			ray[ANGLE_90] = ray[ANGLE_DEG];
-// 	}
-// 	if (step[LAST_MOVE] == SOUTH)
-// 	{
-// 		if (ray[ANGLE_DEG] >= 180)
-// 			ray[ANGLE_90] = ray[ANGLE_DEG] - 180;
-// 		else
-// 			ray[ANGLE_90] = 180 - ray[ANGLE_DEG];
-// 	}
-// 	if (step[LAST_MOVE] == WEST)
-// 	{
-// 		if (ray[ANGLE_DEG] >= 270)
-// 			ray[ANGLE_90] = ray[ANGLE_DEG] - 270;
-// 		else
-// 			ray[ANGLE_90] = 270 - ray[ANGLE_DEG];
-// 	}
-// 	if (step[LAST_MOVE] == EAST)
-// 	{
-// 		if (ray[ANGLE_DEG] >= 90)
-// 			ray[ANGLE_90] = ray[ANGLE_DEG] - 90;
-// 		else
-// 			ray[ANGLE_90] = 90 - ray[ANGLE_DEG];
-// 	}
-
-// 	if (pixel_column == WIN_WIDTH / 2)
-// 	{
-// 		printf("ray[ANGLE_90] = [%f]\n", ray[ANGLE_90]);
-// 	}
-// }
-
-// void	calculate_dist_to_wall(t_cub *cub, double *ray, int *step, int pixel_column)
-// {
-// 	(void)cub;
-// 	(void)pixel_column;
-
-// 	ray[DIST_TO_WALL_X] = 0;
-// 	ray[DIST_TO_WALL_Y] = 0;
-
-// 	if (pixel_column == WIN_WIDTH / 2)
-// 	{
-// 		printf("last move = [%d]\n", step[LAST_MOVE]);
-// 		printf("fabs(ray[F_Y])=[%f] + abs(step[Y]=[%d] - step[Y_PLAYER]=[%d]) - 1\n", fabs(ray[F_Y]), step[Y], step[Y_PLAYER]);
-// 		printf("fabs(ray[F_X])=[%f] + abs(step[X]=[%d] - step[X_PLAYER]=[%d]) - 1\n", fabs(ray[F_X]), step[X], step[X_PLAYER]);
-// 	}
-
-// 	if (step[LAST_MOVE] == NORTH || step[LAST_MOVE] == SOUTH)
-// 	{
-// 		ray[DIST_TO_WALL_Y] = (fabs(ray[F_Y]) + abs(step[Y] - step[Y_PLAYER]) -1);
-// 		ray[DIST_TO_WALL] = fabs(ray[DIST_TO_WALL_Y] / cos(ray[ANGLE_90] * (PI / 180.0)));
-// 	}
-// 	else
-// 	{
-// 		ray[DIST_TO_WALL_X] = (fabs(ray[F_X]) + abs(step[X] - step[X_PLAYER]) -1);
-// 		ray[DIST_TO_WALL] = fabs(ray[DIST_TO_WALL_X] / cos(ray[ANGLE_90] * (PI / 180.0)));
-// 	}
-
-
-// 	if (pixel_column == WIN_WIDTH / 2)
-// 	{
-// 		printf("DIST_TO_WALL_X=[%f]\n", ray[DIST_TO_WALL_X]);
-// 		printf("DIST_TO_WALL_Y=[%f]\n", ray[DIST_TO_WALL_Y]);
-// 		printf("DIST_TO_WALL=[%f]\n", ray[DIST_TO_WALL]);
-// 	}
-// }
-
-void	calculate_dist_to_wall(t_cub *cub, double *ray, int *step, int pixel_column)
-{
-	(void)cub;
-	(void)pixel_column;
-
-	if (step[LAST_MOVE] == NORTH || step[LAST_MOVE] == SOUTH)
-		ray[DIST_TO_WALL] = fabs(fabs(ray[DDA_Y]) - fabs(ray[DIST_Y]));
-	else
-		ray[DIST_TO_WALL] = fabs(fabs(ray[DDA_X]) - fabs(ray[DIST_X]));
-
-	if (pixel_column == WIN_WIDTH / 2 || pixel_column == WIN_WIDTH / 2 + 1)
-	{
-		printf("in calculate_dist DIST_TO_WALL=[%f]\n", ray[DIST_TO_WALL]);
-	}
-}
-
-void	calculate_wall_height(double *ray, int *step)
-{
-
-	step[HEIGHT] = (int)(WIN_HEIGHT / ray[DIST_TO_WALL]);
-	//(int)(((max - ray[DIST_TO_WALL]) / max) * WIN_HEIGHT);
-
-	step[FIRST_PIXEL] = (WIN_HEIGHT - step[HEIGHT]) / 2;
-	if (step[FIRST_PIXEL] < 0)
-		step[FIRST_PIXEL] = 0;
-	step[LAST_PIXEL] = step[FIRST_PIXEL] + step[HEIGHT];
-	if (step[LAST_PIXEL] >= WIN_HEIGHT)
-		step[LAST_PIXEL] = WIN_HEIGHT;
-
-
-		  //calculate lowest and highest pixel to fill in current stripe
-		//   int drawStart = -lineHeight / 2 + h / 2;
-		//   if(drawStart < 0)drawStart = 0;
-		//   int drawEnd = lineHeight / 2 + h / 2;
-		//   if(drawEnd >= h)drawEnd = h - 1;
-}
-
-/*pixel column from 0 to WIN_WIDTH*/
-void	raycasting(t_cub *cub)
-{
-	int		pixel_column;
-	double	ray[12];
-	int		step[10];
-
-	pixel_column = 0;
-	while (pixel_column++ < WIN_WIDTH)
-	{
-		// if (pixel_column % 10 == 0)
-		// {
-		init_ray(cub, pixel_column, ray);
-		init_step(cub, ray, step);
-
-// 		if (pixel_column == WIN_WIDTH / 2)
-// 			printf("pixel_column=[%d] angle_deg=[%f] angle_rad=[%f] \
-// composante_x=[%f] composante_y=[%f] first_x[%f] first_y=[%f] \
-// X=[%d] Y=[%d] STEP_X=[%d] STEP_Y=[%d]\n",
-// 				pixel_column, ray[ANGLE_DEG], ray[ANGLE_RAD],
-// 				ray[DIST_X], ray[DIST_Y], ray[FIRST_X], ray[FIRST_Y],
-// 				step[X], step[Y], step[STEP_X], step[STEP_Y]);
-		digital_differential_analyser(cub, ray, step, pixel_column);
-
-		define_surface_collision(ray, step);
-
-		calculate_dist_to_wall(cub, ray, step, pixel_column);
-
-		calculate_wall_height(ray, step);
-
-		if (pixel_column == 2 || pixel_column == WIN_WIDTH / 2 || pixel_column == WIN_WIDTH - 2)
-		{
-			printf("\n\npixel column is %d\n", pixel_column);
-			printf("wall hit at X=[%d] Y=[%d]\n", step[X], step[Y]);
-			printf("LAST_MOVE=[%d]\n", step[LAST_MOVE]);
-			printf("ray[DIST_TO_WALL]=[%f]\n\n", ray[DIST_TO_WALL]);///
-		}
-
-		int c = step[FIRST_PIXEL];
-		while (c < step[LAST_PIXEL])
-		{
-			if (step[LAST_MOVE] == NORTH)
-				paint_pixel(&cub->img, pixel_column, c, WHITE);
-			else if (step[LAST_MOVE] == SOUTH)
-				paint_pixel(&cub->img, pixel_column, c, DARK_GREY);
-			else if (step[LAST_MOVE] == WEST)
-				paint_pixel(&cub->img, pixel_column, c, ORANGE);
-			else
-				paint_pixel(&cub->img, pixel_column, c, ORANGE / 2);
-			c++;
-		}
-		// }
-	}
-}
-
diff --git a/src/raycasting/walls.c b/src/raycasting/walls.c
deleted file mode 100644
index 8b089ff..0000000
--- a/src/raycasting/walls.c
+++ /dev/null
@@ -1,19 +0,0 @@
-/* ************************************************************************** */
-/*                                                                            */
-/*                                                        :::      ::::::::   */
-/*   walls.c                                            :+:      :+:    :+:   */
-/*                                                    +:+ +:+         +:+     */
-/*   By: mkling <mkling@student.42.fr>              +#+  +:+       +#+        */
-/*                                                +#+#+#+#+#+   +#+           */
-/*   Created: 2025/03/18 11:17:21 by mkling            #+#    #+#             */
-/*   Updated: 2025/03/18 11:25:00 by mkling           ###   ########.fr       */
-/*                                                                            */
-/* ************************************************************************** */
-
-#include "cub.h"
-
-double	get_line_len(double start_x, double start_y, double end_x, double end_y)
-{
-	return (sqrtf((end_x - start_x) * (end_x - start_x)
-			+ (end_y - start_y) * (end_y - start_y)));
-}
diff --git a/src/transform/project.c b/src/transform/project.c
index e4243e0..1d4f5b9 100644
--- a/src/transform/project.c
+++ b/src/transform/project.c
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   project.c                                          :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: vgodoy <vgodoy@student.42.fr>              +#+  +:+       +#+        */
+/*   By: mkling <mkling@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/03/06 22:47:28 by mkling            #+#    #+#             */
-/*   Updated: 2025/03/13 14:29:09 by vgodoy           ###   ########.fr       */
+/*   Updated: 2025/03/20 15:43:58 by mkling           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -51,5 +51,4 @@ void	project_map(t_cub *cub)
 {
 	set_minimap_scale(cub);
 	cub->player.map_pt = project_point(cub, cub->player.grid_pt);
-
 }
